plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
}

group 'com.github.mrbean355'
version '1.11.0'

sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

final fxVersion = '12.0.2'
final platform = findProperty('platform') ?: "win"

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-javafx:1.3.9") {
        // Transitively pulls in Linux dependencies.
        exclude group: 'org.openjfx'
    }
    implementation "io.ktor:ktor-server-netty:1.4.1"
    implementation "io.ktor:ktor-gson:1.4.1"
    implementation 'org.slf4j:slf4j-simple:1.7.30'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'com.vdurmont:semver4j:3.1.0'
    implementation 'no.tornado:tornadofx:1.7.20'

    implementation "org.openjfx:javafx-base:$fxVersion:$platform"
    implementation "org.openjfx:javafx-controls:$fxVersion:$platform"
    implementation "org.openjfx:javafx-graphics:$fxVersion:$platform"
    implementation "org.openjfx:javafx-media:$fxVersion:$platform"

    testImplementation 'junit:junit:4.13'
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

mainClassName = 'com.github.mrbean355.admiralbulldog.MainKt'

jar {
    baseName "admiralbulldog-sounds-$platform"
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes(
                'Main-Class': mainClassName
        )
    }
}

task('generateBuildConfig', type: GenerateBuildConfigTask) {
    it.platform = platform
}
task('generateIcons', type: GenerateIconsTask)

compileKotlin {
    dependsOn(generateBuildConfig)
    dependsOn(generateIcons)
}
